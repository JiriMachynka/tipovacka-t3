// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Tournament {
    id                    Int                     @id @default(autoincrement())
    authorId              String
    name                  String
    teams                 Team[]
    players               Player[]
    scorers               Scorer[]
    tournamentOverallTips TournamentOverallTips[]
    tournamentMatchTips   TournamentMatchTip[]
}

model Player {
    id                     Int                    @id @default(autoincrement())
    username               String
    tournamentId           Int
    tournament             Tournament             @relation(fields: [tournamentId], references: [id], onDelete: Cascade)
    tournamentOverallTipId Int?
    tournamentOverallTips  TournamentOverallTips? @relation(fields: [tournamentOverallTipId], references: [id], onDelete: Cascade)
    scorerFirstId          Int?
    scorerFirst            Scorer?                @relation(name: "scorerFirst", fields: [scorerFirstId], references: [id], onDelete: Cascade)
    scorerSecondId         Int?
    scorerSecond           Scorer?                @relation(name: "scorerSecond", fields: [scorerSecondId], references: [id], onDelete: Cascade)
    matchTips              UserMatchTip[]
}

model Team {
    id                 Int                     @id @default(autoincrement())
    groupName          String
    name               String
    tournamentId       Int
    tournament         Tournament              @relation(fields: [tournamentId], references: [id], onDelete: Cascade)
    homeTeam           TournamentMatchTip[]    @relation("homeTeam")
    awayTeam           TournamentMatchTip[]    @relation("awayTeam")
    winner             TournamentOverallTips[] @relation("winner")
    semifinalistFirst  TournamentOverallTips[] @relation("semifinalistFirst")
    semifinalistSecond TournamentOverallTips[] @relation("semifinalistSecond")
}

model TournamentOverallTips {
    id                   Int        @id @default(autoincrement())
    tournamentId         Int
    tournament           Tournament @relation(fields: [tournamentId], references: [id])
    winnerId             Int?
    winner               Team?      @relation(name: "winner", fields: [winnerId], references: [id])
    semifinalistFirstId  Int?
    semifinalistFirst    Team?      @relation(name: "semifinalistFirst", fields: [semifinalistFirstId], references: [id])
    semifinalistSecondId Int?
    semifinalistSecond   Team?      @relation(name: "semifinalistSecond", fields: [semifinalistSecondId], references: [id])
    player               Player[]
}

model UserMatchTip {
    id                   Int                @id @default(autoincrement())
    playerId             Int
    player               Player             @relation(fields: [playerId], references: [id])
    tournamentMatchTipId Int
    tournamentMatchTip   TournamentMatchTip @relation(fields: [tournamentMatchTipId], references: [id])
    homeScore            Int                @default(0)
    awayScore            Int                @default(0)
    points               Int?
}

model TournamentMatchTip {
    id           Int            @id @default(autoincrement())
    date         DateTime
    tournamentId Int
    tournament   Tournament     @relation(fields: [tournamentId], references: [id])
    homeTeamId   Int
    homeTeam     Team           @relation(name: "homeTeam", fields: [homeTeamId], references: [id])
    awayTeamId   Int
    awayTeam     Team           @relation(name: "awayTeam", fields: [awayTeamId], references: [id])
    homeScore    Int            @default(0)
    awayScore    Int            @default(0)
    played       Boolean        @default(false)
    locked       Boolean        @default(false)
    userMatchTip UserMatchTip[]
}

model Scorer {
    id           Int        @id @default(autoincrement())
    tournamentId Int
    tournament   Tournament @relation(fields: [tournamentId], references: [id])
    firstName    String
    lastName     String
    goals        Int        @default(0)
    assists      Int        @default(0)
    scorerFirst  Player[]   @relation(name: "scorerFirst")
    scorerSecond Player[]   @relation(name: "scorerSecond")
}
